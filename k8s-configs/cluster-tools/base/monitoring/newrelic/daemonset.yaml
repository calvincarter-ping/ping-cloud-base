---
# Source: nri-bundle/charts/newrelic-infrastructure/templates/daemonset.yaml

apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:     
    app: newrelic-infrastructure
    chart: newrelic-infrastructure-2.7.0
    release: nri-bundle
    mode: privileged
  name: nri-bundle-newrelic-infrastructure
spec:
    
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
    
  selector:
    matchLabels:
      app: newrelic-infrastructure
      release: nri-bundle
  template:
    metadata:
      labels:
        app: newrelic-infrastructure
        release: nri-bundle
        mode: privileged
      annotations: {}
    spec:
      serviceAccountName: nri-bundle-newrelic-infrastructure
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: wait-for-nr-license-secret
          image: public.ecr.aws/r2h3l6e4/bitnami/kubectl:1.15.3
          command: [ "/bin/sh", "-c" ]
          args: [ "kubectl get secret $(SECRET_NAME) && echo 'INFO: NR secret object found, skipping waiting for job completion.' || kubectl wait --for=condition=Complete --timeout=$(WAIT_TIMEOUT_SEC)s job/$(JOB_NAME)" ]
          env:
            - name: "WAIT_TIMEOUT_SEC"
              value: "300"
            - name: "JOB_NAME"
              value: "newrelic-license-secret-exporter"
            - name: "SECRET_NAME"
              value: "newrelic-license-key"
      containers:
        - name: newrelic-infrastructure
          image: public.ecr.aws/r2h3l6e4/newrelic/infrastructure-k8s:2.8.1
          imagePullPolicy: "IfNotPresent"
          securityContext:
            privileged: true
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-license-key
                  key: NEW_RELIC_LICENSE_KEY
            - name: "CLUSTER_NAME"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.annotations['CLUSTER_NAME']
            - name: "NRK8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_DISPLAY_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_CUSTOM_ATTRIBUTES"
              value: '{"clusterName":"$(CLUSTER_NAME)"}'
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "KUBERNETES_SERVICE_HOST,KUBERNETES_SERVICE_PORT,CLUSTER_NAME,CADVISOR_PORT,NRK8S_NODE_NAME,KUBE_STATE_METRICS_URL,KUBE_STATE_METRICS_POD_LABEL,TIMEOUT,ETCD_TLS_SECRET_NAME,ETCD_TLS_SECRET_NAMESPACE,API_SERVER_SECURE_PORT,KUBE_STATE_METRICS_SCHEME,KUBE_STATE_METRICS_PORT,KUBE_STATE_METRICS_NAMESPACE,SCHEDULER_ENDPOINT_URL,ETCD_ENDPOINT_URL,CONTROLLER_MANAGER_ENDPOINT_URL,API_SERVER_ENDPOINT_URL,DISABLE_KUBE_STATE_METRICS,DISCOVERY_CACHE_TTL"
          volumeMounts:
            - name: dev
              mountPath: /dev
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              readOnly: true
            # Volume Mount added for custom defintion file used to set scrape interval
            - mountPath: /var/db/newrelic-infra/newrelic-integrations/nri-kubernetes-definition.yml
              name: nri-kubernetes-definition-cfg-volume
              subPath: nri-kubernetes-definition.yml
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
        # Volume added for custom defintion file used to set scrape interval
        - name: nri-kubernetes-definition-cfg-volume
          configMap:
            name: nri-kubernetes-definition-cfg
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists

