# Source: p1as-newrelic/charts/nri-bundle/charts/newrelic-infrastructure/templates/controlplane/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.28.8
    helm.sh/chart: newrelic-infrastructure-3.33.8
    mode: privileged
  name: release-name-nrk8s-controlplane
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: controlplane
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 37f7b8e32dd8d9b4c6f0cef30e981237400887292a8b580be2ddc23307b126ea
        checksum/agent-config: c55aae76ba245ac3f8b632c22cf4217ceead09169f543df60a59fd49d6456d29
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: controlplane
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: release-name-nrk8s-controlplane
      containers:
        - name: controlplane
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/nri-kubernetes:3.28.8"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8001"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: test-cluster
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"
            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/k8s-events-forwarder:1.52.3"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8001
          env:
            - name: "NRIA_LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  name: newrelic-license-key
                  key: NEW_RELIC_LICENSE_KEY
            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"
            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: release-name-nrk8s-controlplane
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: release-name-nrk8s-agent-controlplane
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/controlplane
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/etcd
                    operator: Exists
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: Exists
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: p1as-newrelic/charts/nri-bundle/charts/newrelic-infrastructure/templates/kubelet/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.28.8
    helm.sh/chart: newrelic-infrastructure-3.33.8
    mode: privileged
  name: release-name-nrk8s-kubelet
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: release-name
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: kubelet
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 6d6664bf09dd148fa96366c2a9dc632ed686292583c5c6b5c7cb56dec9ca5ba9
        checksum/agent-config: d1d427b4e1ad848ac8c8cd82953896c1257d1a94efed86fa4fd128b1c61f3938
        checksum/integrations_config: b9175be6ae852665694e93ef3fd535ff5775902477c54ddbd519f05f5a485c90
      labels:
        app.kubernetes.io/instance: release-name
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: kubelet
    spec:
      serviceAccountName: release-name-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: kubelet
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/nri-kubernetes:3.28.8"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8003"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: test-cluster
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"
            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            # Required to connect to the kubelet
            - name: "NRI_KUBERNETES_NODEIP"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
        - name: agent
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/infrastructure-bundle:3.2.43"
          args: ["newrelic-infra"]
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: true
            runAsGroup: 0
            runAsUser: 0
          ports:
            - containerPort: 8003
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-license-key
                  key: NEW_RELIC_LICENSE_KEY
            - name: "NRIA_OVERRIDE_HOSTNAME_SHORT"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRIA_OVERRIDE_HOSTNAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "NRI_KUBERNETES_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
            - name: "CLUSTER_NAME"
              value: test-cluster
            - name: "NRIA_PASSTHROUGH_ENVIRONMENT"
              value: "CLUSTER_NAME"
            - name: "NRIA_HOST"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "status.hostIP"
          volumeMounts:
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
            - name: nri-integrations-cfg-volume
              mountPath: /etc/newrelic-infra/integrations.d/
            - name: dev
              mountPath: /dev
            - name: host-containerd-socket
              mountPath: /run/containerd/containerd.sock
            - name: host-docker-socket
              mountPath: /var/run/docker.sock
            - name: log
              mountPath: /var/log
            - name: host-volume
              mountPath: /host
              readOnly: true
            - mountPath: /var/db/newrelic-infra/data
              name: agent-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: agent-tmpfs-user-data
            - mountPath: /tmp
              name: agent-tmpfs-tmp
          resources:
            limits:
              memory: 300M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: dev
          hostPath:
            path: /dev
        - name: host-containerd-socket
          hostPath:
            path: /run/containerd/containerd.sock
        - name: host-docker-socket
          hostPath:
            path: /var/run/docker.sock
        - name: log
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
        - name: agent-tmpfs-data
          emptyDir: {}
        - name: agent-tmpfs-user-data
          emptyDir: {}
        - name: agent-tmpfs-tmp
          emptyDir: {}
        - name: nri-kubernetes-config
          configMap:
            name: release-name-nrk8s-kubelet
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: config
          configMap:
            name: release-name-nrk8s-agent-kubelet
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        - name: nri-integrations-cfg-volume
          configMap:
            name: release-name-nrk8s-integrations-cfg
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
      nodeSelector:
        kubernetes.io/os: linux
