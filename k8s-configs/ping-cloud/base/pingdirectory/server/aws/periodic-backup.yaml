apiVersion: v1
kind: ConfigMap
metadata:
  name: pingdirectory-backup
data:
  backup.sh: |-
    #!/bin/sh
    set -e

    # Install kubectl
    curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/amd64/kubectl \
    -o /tmp/kubectl

    chmod +x /tmp/kubectl

    UPLOAD_FILES=
    HOOKS_TEST_DIR="/opt/in/hooks"
    SCRIPT="${HOOKS_TEST_DIR}"/90-upload-backup-s3.sh
    LOG_FILE=/tmp/upload.log

    test -z "${BACKUP_RESTORE_POD}" && SERVER="${K8S_STATEFUL_SET_NAME}-0" || SERVER="${BACKUP_RESTORE_POD}"

    echo "Running backup script within ${SERVER} pod"
    echo "${BACKENDS_TO_BACKUP}"
    # #cp /logger.lib.sh "${HOOKS_DIR}"/logger.lib.sh

    echo "PD volume"
    ls -al /opt/out

    /opt/out/instance/bin/backup --backupDirectory "/opt/backup/userRoot" --backendID "userRoot"

    echo "Backup from dynamic volume"
    ls -al /opt/backup

    # /tmp/kubectl cp ping-cloud-vathsalyakidambi-dev/pingdirectory-0:/opt/out/backup /opt/backup 

    #/tmp/kubectl exec "${SERVER}" -c pingdirectory -- sh -c "test -x ${SCRIPT} && ${SCRIPT}"> "${LOG_FILE}"
    # test -x ${SCRIPT} && sh ${SCRIPT}
    # ls -al /opt/out/backup

    # echo "Deleting PingDirectory backup pvc"
    # /tmp/kubectl delete pvc pingdirectory-backup
# ---

# # Persistance Volume to run backup process
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: pingdirectory-backup
#   labels:
#     class: pingdirectory-server
# spec:
#   accessModes:
#     - ReadWriteOnce
#   storageClassName: pingdirectory-gp3
#   resources:
#     requests:
#       storage: 40Gi

---
# Do a full backup of the user backend every 6 hours.
# A manual restore can be performed using the restore job (restore.yaml) when
# necessary.

apiVersion: batch/v1
kind: CronJob
metadata:
  name: pingdirectory-periodic-backup
spec:
  schedule: "30 */6 * * *"
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 90
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          serviceAccount: ping-serviceaccount
          tolerations:
          - key: "pingidentity.com/pd-only"
            operator: "Equal"
            value: "true"
            effect: "NoSchedule"
          restartPolicy: OnFailure
          containers:
          - name: pingdirectory-backup
            image: 705370621539.dkr.ecr.us-west-2.amazonaws.com/pingcloud-apps/pingdirectory:pdo-4959-1
            imagePullPolicy: Always
            securityContext:
              runAsGroup: 9999
              runAsNonRoot: true
              runAsUser: 9031
              allowPrivilegeEscalation: false
            command:
            - /opt/in/backup.sh
            envFrom:
            - configMapRef:
                name: pingdirectory-environment-variables
            - configMapRef:
                name: pingcommon-environment-variables
            env:
            - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
              value: "true"
            volumeMounts:
            - name: backup-script
              mountPath: /opt/in/backup.sh
              subPath: backup.sh
            - name: pd-backup-volume
              mountPath: /opt/out/backup
              subPath: backup
            - name: pd-backup-volume
              mountPath: /opt/out/backup-upload
              subPath: backup-upload
          volumes:
          - name: backup-script
            configMap:
              name: pingdirectory-backup
              defaultMode: 0555
          - name: pd-backup-volume
            persistentVolumeClaim:
              claimName: pingdirectory-backup

