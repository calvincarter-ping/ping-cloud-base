apiVersion: v1
kind: ConfigMap
metadata:
  name: known-hosts-config

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: pingcommon-init
data:
  init.sh: |-
    #!/bin/sh

    #--- Sleep for the configured initial delay seconds ---#
    SLEEP_SECONDS=${INITIAL_DELAY_SECONDS:-0}
    sleep ${SLEEP_SECONDS}

    #--- Copy SSH configuration files ---#
    test -f /known_hosts && cp /known_hosts /.ssh
    test -f /id_rsa && cp /id_rsa /.ssh

    #--- Copy kubectl to the data directory ---#
    which kubectl | xargs -I {} cp {} /data

    #--- Download skbn from ping-artifacts bucket ---#
    wget -qO /data/skbn https://ping-artifacts.s3-us-west-2.amazonaws.com/pingcommon/skbn/0.5.0/skbn

    #--- Check skbn executable in data directory ---#
    if test ! -f /data/skbn; then
      echo "Failed to locate /data/skbn"
      exit 1
    fi

    #--- Allowing to execute skbn ---#
    chmod +x /data/skbn

    #--- Note: this initialization is only needed for PingDirectory ---#
    #--- Generate a dummy topology JSON file so the hook that generates it in the image is not triggered ---#
    TOPOLOGY_FILE=/data/topology.json
    cat <<EOF > "${TOPOLOGY_FILE}"
    {
          "serverInstances" : []
    }
    EOF

    #--- Wait for dependent services, if any ---#
    test -z "${WAIT_FOR_SERVICES}" && exit 0

    # This only makes sense for single-cluster deployments. By default, we just wait for one
    # replica of a particular application, but if we must wait for more than one replica, then
    # this variable may be set to do so.
    WAIT_FOR_NUM_REPLICAS=${WAIT_FOR_NUM_REPLICAS:-1}

    for APP in ${WAIT_FOR_SERVICES}; do
      #--- Wait over protocol for multi-cluster deployments ---#
      if test ! -z "${IS_MULTI_CLUSTER}" && "${IS_MULTI_CLUSTER}"; then
        while true; do
          case "${APP}" in
            pingdirectory)
              URL=${PD_PRIMARY_PUBLIC_HOSTNAME}:6360
              ;;

            pingfederate-admin)
              URL=${PF_ADMIN_PUBLIC_HOSTNAME}/pingfederate/app
              ;;

            pingaccess-admin)
              URL=${PA_ADMIN_PUBLIC_HOSTNAME}
              ;;
          esac

          wget --quiet --spider --tries 5 \
              --no-check-certificate \
              --connect-timeout 1 --read-timeout 1 \
              https://"${URL}"
          test $? -eq 0 && break

          echo "init: ${APP} URL '${URL}' unreachable. Will try again in 2 seconds."
          sleep 2s
        done

        # Continue to the next app to wait on.
        continue
      fi

      DEPLOYMENT=$(kubectl get statefulset -o name | grep "${APP}$")
      if test -z "${DEPLOYMENT}"; then
        echo "init: statefulset ${APP} does not exist"
        exit 1
      fi

      TOTAL_NUM_REPLICAS=$(kubectl get "${DEPLOYMENT}" -o jsonpath='{.spec.replicas}')
      if test ${WAIT_FOR_NUM_REPLICAS} -gt ${TOTAL_NUM_REPLICAS}; then
        echo "init: WAIT_FOR_NUM_REPLICAS must be <= TOTAL_NUM_REPLICAS"
        exit 1
      fi

      echo "init: waiting for ${WAIT_FOR_NUM_REPLICAS} replicas of ${APP} to be ready"

      while true; do
        NUM_READY=$(kubectl get "${DEPLOYMENT}" -o jsonpath='{.status.readyReplicas}')
        if test ! -z ${NUM_READY} && test ${NUM_READY} -ge ${WAIT_FOR_NUM_REPLICAS}; then
          break
        fi

        echo "init: ${APP} not ready. Will try again in 2 seconds."
        kubectl get "${DEPLOYMENT}"
        sleep 2s
      done
    done

    exit 0
