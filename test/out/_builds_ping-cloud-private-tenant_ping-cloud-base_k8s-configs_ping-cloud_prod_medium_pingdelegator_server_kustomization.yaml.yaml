apiVersion: v1
kind: Service
metadata:
  labels:
    app: ping-cloud
  name: pingdelegator
  namespace: ping-cloud
spec:
  ports:
  - name: pingdelegator
    port: 1443
    targetPort: https
  selector:
    app: ping-cloud
    role: pingdelegator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ping-cloud
  name: pingdelegator
  namespace: ping-cloud
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ping-cloud
      role: pingdelegator
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        lastUpdateReason: NA
      labels:
        app: ping-cloud
        role: pingdelegator
      name: pingdelegator
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: role
                  operator: In
                  values:
                  - pingdelegator
              topologyKey: topology.kubernetes.io/zone
            weight: 1
      containers:
      - envFrom:
        - configMapRef:
            name: pingdelegator-environment-variables
        image: public.ecr.aws/r2h3l6e4/pingcloud-apps/pingdelegator/dev:v1.19-release-branch-latest
        imagePullPolicy: Always
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - nginx -s quit
              - while killall -0 nginx; do sleep 1; done
        livenessProbe:
          exec:
            command:
            - /opt/liveness.sh
          failureThreshold: 4
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 5
        name: pingdelegator
        ports:
        - containerPort: 1443
          name: https
        readinessProbe:
          exec:
            command:
            - /opt/liveness.sh
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 5
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        volumeMounts:
        - mountPath: /home/ping/.ssh
          name: ssh-dir
        - mountPath: /opt/staging/topology/descriptor.json
          name: topology-descriptor
          subPath: descriptor.json
        - mountPath: /usr/local/bin/kubectl
          name: data-dir
          subPath: kubectl
        - mountPath: /opt/staging/hooks/logger.lib.sh
          name: data-dir
          subPath: logger.lib.sh
        - mountPath: /opt/staging/ds_env_vars
          name: data-dir
          subPath: ds_env_vars
      initContainers:
      - command:
        - /get_ssm_env_vars.sh
        envFrom:
        - configMapRef:
            name: pingdelegator-environment-variables
        image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/amazon/aws-cli:2.0.17
        imagePullPolicy: IfNotPresent
        name: pingdelegator-discovery-service
        volumeMounts:
        - mountPath: /config
          name: data-dir
        - mountPath: /get_ssm_env_vars.sh
          name: discovery-service
          subPath: get_ssm_env_vars.sh
      - command:
        - /copy-dependencies.sh
        envFrom:
        - configMapRef:
            name: pingdelegator-environment-variables
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/toolkit:v1.15.0
        imagePullPolicy: IfNotPresent
        name: pingdelegator-init
        securityContext:
          allowPrivilegeEscalation: false
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        volumeMounts:
        - mountPath: /.ssh
          name: ssh-dir
        - mountPath: /data
          name: data-dir
        - mountPath: /id_rsa
          name: ssh-id-key-secret
          subPath: id_rsa
        - mountPath: /known_hosts
          name: known-hosts-config
          subPath: known_hosts
        - mountPath: /copy-dependencies.sh
          name: pingdelegator-init
          subPath: copy-dependencies.sh
        - mountPath: /utils.lib.sh
          name: pingdelegator-init
          subPath: utils.lib.sh
        - mountPath: /logger.lib.sh
          name: pingdelegator-init
          subPath: logger.lib.sh
      securityContext:
        fsGroup: 9999
      serviceAccount: ping-serviceaccount
      volumes:
      - configMap:
          defaultMode: 365
          name: discovery-service
        name: discovery-service
      - emptyDir: {}
        name: ssh-dir
      - emptyDir: {}
        name: data-dir
      - configMap:
          defaultMode: 365
          name: pingcommon-init
        name: pingdelegator-init
      - configMap:
          defaultMode: 420
          name: topology-descriptor
          optional: true
        name: topology-descriptor
      - name: ssh-id-key-secret
        secret:
          defaultMode: 256
          optional: true
          secretName: ssh-id-key-secret
      - configMap:
          defaultMode: 420
          name: known-hosts-config
          optional: true
        name: known-hosts-config
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  labels:
    app: ping-cloud
  name: pingdelegator-pdb
  namespace: ping-cloud
spec:
  minAvailable: 30%
  selector:
    matchLabels:
      app: ping-cloud
      role: pingdelegator
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    app: ping-cloud
  name: pingdelegator-ingress
  namespace: ping-cloud
spec:
  ingressClassName: nginx-private
  rules:
  - host: pingdelegator-dev.ping-demo.com
    http:
      paths:
      - backend:
          service:
            name: pingdelegator
            port:
              number: 1443
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - pingdelegator-dev.ping-demo.com
