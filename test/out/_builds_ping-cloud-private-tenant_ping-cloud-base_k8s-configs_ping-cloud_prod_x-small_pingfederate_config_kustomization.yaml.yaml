apiVersion: v1
data:
  config.yml: |-
    ---
    metrics:
    - name: metric_pingfederate_idp_session_registry_session_map_size
      path: '{.idp\.session\.registry\.session\.map\.size}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_response_concurrency_statistics_90_percentile
      path: '{.response\.concurrency\.statistics\.90\.percentile}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_response_statistics_count
      path: '{.response\.statistics\.count}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_response_time_statistics_90_percentile
      path: '{.response\.time\.statistics\.90\.percentile}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_session_state_attribute_map_size
      path: '{.session\.state\.attribute\.map\.size}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_sp_session_registry_session_map_size
      path: '{.sp\.session\.registry\.session\.map\.size}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_total_failed_transactions
      path: '{.total\.failed\.transactions}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_total_transactions
      path: '{.total\.transactions}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_response_concurrency_statistics_mean
      path: '{.response\.concurrency\.statistics\.mean}'
      labels:
        environment: pingfederate
        source: heartbeat
    - name: metric_pingfederate_response_time_statistics_mean
      path: '{.response\.time\.statistics\.mean}'
      labels:
        environment: pingfederate
        source: heartbeat
kind: ConfigMap
metadata:
  labels:
    app: ping-cloud
  name: pf-exporter-config
  namespace: ping-cloud
---
apiVersion: v1
data:
  ACCEPT_EULA: "YES"
  API_RETRY_LIMIT: "10"
  API_TIMEOUT_WAIT: "5"
  BACKUP_FILE_NAME: ""
  JAVA_AGENT_OPTS: -javaagent:/opt/staging/jmx_prometheus_javaagent-0.14.0.jar=8080:/opt/in/instance/bin/jmx_export_config.yaml
  K8S_DEPLOYMENT_NAME_PINGFEDERATE_ADMIN: pingfederate-admin
  K8S_SERVICE_NAME_PINGFEDERATE_ADMIN: pingfederate-admin
  K8S_TAIL_LOG_FILES: /opt/out/instance/log/jvm-garbage-collection.log /opt/out/instance/log/server.log
    /opt/out/instance/log/init.log /opt/out/instance/log/admin.log /opt/out/instance/log/admin-event-detail.log
    /opt/out/instance/log/admin-api.log /opt/out/instance/log/runtime-api.log /opt/out/instance/log/transaction.log
    /opt/out/instance/log/audit.log /opt/out/instance/log/provisioner-audit.log /opt/out/instance/log/provisioner.log
    /opt/out/instance/log/request.log /opt/out/instance/log/request2.log
  LDAP_PORT: "1389"
  LDAPS_PORT: "1636"
  ORCHESTRATION_TYPE: kubernetes
  PA_CLUSTER_PORT: "9090"
  PA_CLUSTER_PRIVATE_HOSTNAME: pingaccess-admin
  PA_WAS_CLUSTER_PORT: "9090"
  PA_WAS_CLUSTER_PRIVATE_HOSTNAME: pingaccess-was-admin
  PD_CLUSTER_PORT: "8989"
  PD_CLUSTER_PRIVATE_HOSTNAME: pingdirectory
  PF_ADMIN_CONSOLE_ENVIRONMENT: dev-us-west-2
  PF_ADMIN_CONSOLE_TITLE: Advanced SSO
  PF_ADMIN_PORT: "9999"
  PF_ADMIN_PUBLIC_HOSTNAME: ""
  PF_ADMIN_USER_USERNAME: administrator
  PF_CLUSTER_PORT: "7600"
  PF_CLUSTER_PRIVATE_HOSTNAME: pingfederate-cluster
  PF_CONSOLE_AUTHENTICATION: LDAP
  PF_DNS_PING_CLUSTER: pingfederate-cluster
  PF_DNS_PING_NAMESPACE: placeholder
  PF_LOG_LEVEL: INFO
  PF_MAX_HEAP: 512m
  PF_MAX_YGEN: 256m
  PF_MIN_HEAP: 256m
  PF_MIN_YGEN: 128m
  PF_PD_BIND_PORT: "1389"
  PF_PD_BIND_PROTOCOL: ldap
  PF_PD_BIND_USESSL: "false"
  PF_PROVISIONER_GRACE_PERIOD: "600"
  PF_PROVISIONER_SYNC_FREQ: "60"
  PING_IDENTITY_ACCEPT_EULA: "YES"
  PINGFEDERATE_ADMIN_SERVER: pingfederate-admin
  REGION: us-west-2
  RESTORE_BACKUP: "true"
  SECRETS_DIR: /usr/local/secrets
  SERVER_PROFILE_BRANCH: v1.19-release-branch
  SERVER_PROFILE_PATH: profiles/pingfederate
  SERVER_PROFILE_URL: https://github.com/pingidentity/ping-cloud-base.git
  SKIP_LIVENESS: "false"
  SOCKET_HOST: logstash-elastic.elastic-stack-logging.svc.cluster.local
  SOCKET_PORT_AUDIT: "20514"
  SOCKET_PORT_PROVISIONER: "20512"
  SOCKET_PORT_SYSTEM: "20513"
  SOCKET_PROTOCOL: TCP
  TAIL_LOG_FILES: ""
kind: ConfigMap
metadata:
  labels:
    app: ping-cloud
  name: pingfederate-admin-environment-variables
  namespace: ping-cloud
---
apiVersion: v1
data:
  ACCEPT_EULA: "YES"
  API_RETRY_LIMIT: "10"
  API_TIMEOUT_WAIT: "5"
  BACKUP_FILE_NAME: ""
  JAVA_AGENT_OPTS: -javaagent:/opt/staging/jmx_prometheus_javaagent-0.14.0.jar=8080:/opt/in/instance/bin/jmx_export_config.yaml
  K8S_DEPLOYMENT_NAME_PINGFEDERATE_ADMIN: pingfederate-admin
  K8S_SERVICE_NAME_PINGFEDERATE_ADMIN: pingfederate-admin
  K8S_TAIL_LOG_FILES: /opt/out/instance/log/jvm-garbage-collection.log /opt/out/instance/log/server.log
    /opt/out/instance/log/init.log /opt/out/instance/log/admin.log /opt/out/instance/log/admin-event-detail.log
    /opt/out/instance/log/admin-api.log /opt/out/instance/log/runtime-api.log /opt/out/instance/log/transaction.log
    /opt/out/instance/log/audit.log /opt/out/instance/log/provisioner-audit.log /opt/out/instance/log/provisioner.log
    /opt/out/instance/log/request.log /opt/out/instance/log/request2.log
  LDAP_PORT: "1389"
  LDAPS_PORT: "1636"
  ORCHESTRATION_TYPE: kubernetes
  PA_CLUSTER_PORT: "9090"
  PA_CLUSTER_PRIVATE_HOSTNAME: pingaccess-admin
  PA_WAS_CLUSTER_PORT: "9090"
  PA_WAS_CLUSTER_PRIVATE_HOSTNAME: pingaccess-was-admin
  PD_CLUSTER_PORT: "8989"
  PD_CLUSTER_PRIVATE_HOSTNAME: pingdirectory
  PF_ADMIN_CONSOLE_ENVIRONMENT: dev-us-west-2
  PF_ADMIN_CONSOLE_TITLE: Advanced SSO
  PF_ADMIN_PORT: "9999"
  PF_ADMIN_PUBLIC_HOSTNAME: ""
  PF_ADMIN_USER_USERNAME: administrator
  PF_CLUSTER_PORT: "7600"
  PF_CLUSTER_PRIVATE_HOSTNAME: pingfederate-cluster
  PF_CONSOLE_AUTHENTICATION: LDAP
  PF_DNS_PING_CLUSTER: pingfederate-cluster
  PF_DNS_PING_NAMESPACE: placeholder
  PF_LOG_LEVEL: INFO
  PF_MAX_HEAP: 512m
  PF_MAX_YGEN: 256m
  PF_MIN_HEAP: 256m
  PF_MIN_YGEN: 128m
  PF_PD_BIND_PORT: "1389"
  PF_PD_BIND_PROTOCOL: ldap
  PF_PD_BIND_USESSL: "false"
  PF_PROVISIONER_GRACE_PERIOD: "600"
  PF_PROVISIONER_SYNC_FREQ: "60"
  PING_IDENTITY_ACCEPT_EULA: "YES"
  PINGFEDERATE_ADMIN_SERVER: pingfederate-admin
  REGION: us-west-2
  RESTORE_BACKUP: "true"
  SECRETS_DIR: /usr/local/secrets
  SERVER_PROFILE_BRANCH: v1.19-release-branch
  SERVER_PROFILE_PATH: profiles/pingfederate
  SERVER_PROFILE_URL: https://github.com/pingidentity/ping-cloud-base.git
  SKIP_LIVENESS: "false"
  SOCKET_HOST: logstash-elastic.elastic-stack-logging.svc.cluster.local
  SOCKET_PORT_AUDIT: "20514"
  SOCKET_PORT_PROVISIONER: "20512"
  SOCKET_PORT_SYSTEM: "20513"
  SOCKET_PROTOCOL: TCP
  TAIL_LOG_FILES: ""
kind: ConfigMap
metadata:
  labels:
    app: ping-cloud
  name: pingfederate-environment-variables
  namespace: ping-cloud
---
apiVersion: v1
data:
  backup-csd-data.sh: |-
    #!/bin/sh

    # Install kubectl
    curl -sS https://storage.googleapis.com/kubernetes-release/release/"${KUBECTL_VERSION}"/bin/linux/amd64/kubectl \
    -o /tmp/kubectl

    chmod +x /tmp/kubectl

    REPLICAS=$(/tmp/kubectl get pods -l=role="${CSD_POD_ROLE}" -o name)

    CSD_FILES=
    for REPLICA in ${REPLICAS}; do
      SERVER=${REPLICA}
      SCRIPT="${HOOKS_DIR}"/82-upload-csd-s3.sh
      LOG_FILE=/tmp/upload.log

      echo "Uploading CSD on server ${SERVER}"
      /tmp/kubectl exec "${SERVER}" -c "${CSD_CONTAINER_NAME}" -- sh -c "test -x ${SCRIPT} && ${SCRIPT}" >"${LOG_FILE}"

      # Sending logs to STDOUT
      cat ${LOG_FILE}

      if test ${?} -eq 0; then
        CSD_FILE=$(tail -1 "${LOG_FILE}")
        test -z "${CSD_FILES}" && CSD_FILES="${CSD_FILE}" || CSD_FILES="${CSD_FILES} ${CSD_FILE}"

        # Print the names of the uploaded files so callers know exactly what was uploaded
        echo "The following files were uploaded:"
        echo "${CSD_FILES}"
      else
        exit_code=${?}
        echo "The kubectl command attempting to invoke the script exited with: ${exit_code}"
        echo "This may be because: "
        echo "1) The ${SCRIPT} script is not currently available on the ${SERVER}.  This is expected if ${SERVER} is not running yet."
        echo "2) The ${SCRIPT} script exited with an error.  Please review the logs above to determine if this is the case."
      fi
    done
kind: ConfigMap
metadata:
  labels:
    app: ping-cloud
  name: pingfederate-periodic-csd-upload
  namespace: ping-cloud
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    sealedsecrets.bitnami.com/managed: "true"
  labels:
    app: ping-cloud
  name: pingfederate-license
  namespace: ping-cloud
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    sealedsecrets.bitnami.com/managed: "true"
  labels:
    app: ping-cloud
  name: pingfederate-passwords
  namespace: ping-cloud
type: Opaque
