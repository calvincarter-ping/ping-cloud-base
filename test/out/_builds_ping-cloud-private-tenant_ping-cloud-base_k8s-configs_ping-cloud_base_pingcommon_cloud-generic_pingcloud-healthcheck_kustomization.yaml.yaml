apiVersion: v1
data:
  DEBUG_MODE: "1"
  PORT: "5000"
  PYTHON_MAX_THREADS: "1"
  SSL_CRT: /tls.crt
  SSL_KEY: /tls.key
  WEB_CONCURRENCY: "1"
kind: ConfigMap
metadata:
  labels:
    app: ping-cloud
  name: pingcloud-healthcheck-environment-variables
  namespace: ping-cloud
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: ping-cloud
    role: healthcheck
  name: healthcheck
  namespace: ping-cloud
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: ping-cloud
    role: pingcloud-healthcheck
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ping-cloud
    role: pingcloud-healthcheck
  name: pingcloud-healthcheck
  namespace: ping-cloud
spec:
  selector:
    matchLabels:
      app: ping-cloud
      role: pingcloud-healthcheck
  template:
    metadata:
      labels:
        app: ping-cloud
        role: pingcloud-healthcheck
      name: pingcloud-healthcheck
    spec:
      containers:
      - env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: pingcloud-healthcheck-environment-variables
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/healthcheck/dev:v1.19-release-branch-latest
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: pingcloud-healthcheck
        ports:
        - containerPort: 5000
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 400m
            memory: 600Mi
          requests:
            cpu: 200m
            memory: 400Mi
      serviceAccount: ping-serviceaccount
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  labels:
    app: ping-cloud
  name: healthcheck-ingress
  namespace: ping-cloud
spec:
  ingressClassName: nginx-public
  rules:
  - host: healthcheck.ping-demo.com
    http:
      paths:
      - backend:
          service:
            name: healthcheck
            port:
              number: 5000
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - healthcheck.ping-demo.com
