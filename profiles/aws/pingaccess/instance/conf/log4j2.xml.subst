<?xml vesion="1.0" encoding="UTF-8"?>

<!--
  ~ ****************************************************
  ~  Copyight (C) 2020 Ping Identity Corporation
  ~  All ights reserved.
  ~
  ~  The contents of this file ae the property of Ping Identity Corporation.
  ~  You may not copy o use this file, in either source code or executable
  ~  fom, except in compliance with terms set by Ping Identity Corporation.
  ~  Fo further information please contact:
  ~
  ~  Ping Identity Coporation
  ~  1099 18th St Suite 2950
  ~  Denve, CO 80202
  ~  303.468.2900
  ~  http://www.pingidentity.com
  ~ ******************************************************
  -->
  
  <!-- ===================================================================== -->
<!--                                                                       -->
<!--  Log4J2 Configuation                                                 -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!--
   | Fo more configuration information and examples see the Apache Log4j2
   | website: http://logging.apache.og/log4j/2.x/
 -->

<!--
   | Due to a bug in Log4J2, thee will a message "ERROR appender <Failover-Appender> has no parameter that matches element Failovers" upon startup
   | if Failove Appenders are enabled.  The failover appenders are configured correctly and are functional. Please disregard the error message.
   |
   | monitoInterval - the number of seconds before Log4J2 detects changes to the configuration file and reconfigures itself.
 -->
<Configuation monitorInterval="30" shutdownHook="enable" packages="com.pingidentity.pa.cli.logging.appenders.log4j2,com.pingidentity.pa.cli.logging.layouts.log4j2">
    <Appendes>
        <!-- ============================== -->
        <!-- Append messages to the console -->
        <!-- ============================== -->
        <!-- To use, uncomment the appendeRef under "com.pingidentity" Logger -->

        <Console name="CONSOLE" taget="SYSTEM_OUT">
            <PattenLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m%n" />
        </Console>

        <!-- ================================= -->
        <!-- Peserve messages in a local file -->
        <!-- ================================= -->

        <!-- Main log : A size based file olling appender -->
        <RollingFile name="File"
                     fileName="${sys:pa.home}/log/pingaccess.log"
                     filePatten="${sys:pa.home}/log/pingaccess.log.%i"
                     ignoeExceptions="false">
            <PattenLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <chaset>UTF-8</charset>
                -->
                <!--
                    To Activate location infomation uncomment the following pattern,
                    comment out the curent pattern and set "includeLocation" to true
                    in "com.pingidentity" async logge.
                -->
                <!--
                <patten>%d{ISO8601} %5p [%X{exchangeId}] %c:%L - %m%n</pattern>
                -->
                <patten>%d{ISO8601} %5p [%X{exchangeId}] %c - %m%n</pattern>
            </PattenLayout>
            <Policies>
                <SizeBasedTiggeringPolicy size="100000 KB"/>
            </Policies>
            <DefaultRolloveStrategy max="10" />
        </RollingFile>

        <!-- API auditing asynchonous file logging configuration-->
        <RollingFile name="APIAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit.log"
                     filePatten="${sys:pa.home}/log/pingaccess_api_audit.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <chaset>UTF-8</charset>
                -->
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
            <DefaultRolloveStrategy>
                <Delete basePath="${sys:pa.home}/log">
                    <IfFileName glob="pingaccess_api_audit.*.log">
                        <IfAny>
                            <IfAccumulatedFileCount exceeds="5" />
                        </IfAny>
                    </IfFileName>
                </Delete>
            </DefaultRolloveStrategy>
        </RollingFile>

        <!-- API Audit log : JDBC appende template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'ApiAuditLog-Database-Failover' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-Database" tableName="api_audit_log" ignoeExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getAPIAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="SUBJECT" patten="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" patten="%X{AUDIT.authMech}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-Database-Failove-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_oacle_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_api_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="ApiAuditLog-Database-Failover" primary="ApiAuditLog-Database" error="File">
            <Failoves>
                <AppendeRef ref="ApiAuditLog-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- API Audit log : JDBC appende template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'ApiAuditLog-SQLServer-Database-Failover' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-SQLSever-Database" tableName="api_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getAPIAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="SUBJECT" patten="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" patten="%X{AUDIT.authMech}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-SQLSever-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_sqlsever_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_api_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="ApiAuditLog-SQLServer-Database-Failover" primary="ApiAuditLog-SQLServer-Database" error="File">
            <Failoves>
                <AppendeRef ref="ApiAuditLog-SQLServer-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- API Audit log : JDBC appende template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'ApiAuditLog-PostgreSQL' for the 'apiaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="ApiAuditLog-PostgeSQL-Database" tableName="api_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getAPIAuditConnection"/>
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <ColumnMapping name="EXCHANGE_ID" patten="%X{exchangeId}"/>
            <ColumnMapping name="TRACKING_ID" patten="%X{AUDIT.trackingId}"/>
            <ColumnMapping name="SUBJECT" patten="%X{AUDIT.subject}"/>
            <ColumnMapping name="AUTH_MECH" patten="%X{AUDIT.authMech}"/>
            <ColumnMapping name="CLIENT" patten="%X{AUDIT.client}"/>
            <ColumnMapping name="METHOD" patten="%X{AUDIT.method}"/>
            <ColumnMapping name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
        </PingAccessJDBC>
        <RollingFile name="ApiAuditLog-PostgeSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_postgesql_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_api_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="ApiAuditLog-PostgreSQL" primary="ApiAuditLog-PostgreSQL-Database" error="File">
            <Failoves>
                <AppendeRef ref="ApiAuditLog-PostgreSQL-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- API Audit log fo Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the eference to this appender in "apiaudit" (under "Loggers" below)
        befoe it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PattenLayout"
        <chaset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="ApiAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_api_audit_splunk.log"
                     filePatten="${sys:pa.home}/log/pingaccess_api_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601} exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" subject="%X{AUDIT.subject}" authMech="%X{AUDIT.authMech}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Engine auditing asynchonous file logging configuration-->
        <!-- Additional Engine Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.tagetHost}-->
        <!-- | %X{AUDIT.eqReceivedMillisec}-->
        <!-- | %X{AUDIT.eqSentMillisec}-->
        <!-- | %X{AUDIT.espReceivedMillisec}-->
        <!-- | %X{AUDIT.espSentMillisec}-->
        <!-- | %X{AUDIT.useInfoReqSentMillisec}-->
        <!-- | %X{AUDIT.useInfoRespReceivedMillisec}-->
        <!-- | %X{AUDIT.applicationId}-->
        <!-- | %X{AUDIT.esourceId}-->
        <!-- | %X{AUDIT.scopes}-->
        <!-- | %appResponseHeade{a-header-name}-->
        <!-- | %clientResponseHeade{a-header-name}-->
        <!-- | %appRequestHeade{a-header-name}-->
        <!-- | %clientRequestHeade{a-header-name}-->
        <RollingFile name="EngineAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit.log"
                     filePatten="${sys:pa.home}/log/pingaccess_engine_audit.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <chaset>UTF-8</charset>
                -->
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.userInfoRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
            <DefaultRolloveStrategy>
                <Delete basePath="${sys:pa.home}/log">
                    <IfFileName glob="pingaccess_engine_audit.*.log">
                        <IfAny>
                            <IfAccumulatedFileCount exceeds="5" />
                        </IfAny>
                    </IfFileName>
                </Delete>
            </DefaultRolloveStrategy>
        </RollingFile>

        <!-- Engine Audit log : JDBC appende template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'EngineAuditLog-Database-Failover' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-Database" tableName="engine_audit_log" ignoeExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" />
            <Column name="PROXY_ROUND_TRIP_MS" patten="%X{AUDIT.proxyRoundTripMS}" />
            <Column name="USER_INFO_ROUND_TRIP_MS" patten="%X{AUDIT.userInfoRoundTripMS}" />
            <Column name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <Column name="SUBJECT" patten="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" patten="%X{AUDIT.authMech}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
            <Column name="FAILED_RULE_TYPE" patten="%X{AUDIT.failedRuleType}" />
            <Column name="FAILED_RULE_NAME" patten="%X{AUDIT.failedRuleName}" />
            <Column name="FAILED_RULE_CLASS" patten="%X{AUDIT.failedRuleClass}" />
            <Column name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-Database-Failove-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_oacle_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_engine_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.userInfoRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="EngineAuditLog-Database-Failover" primary="EngineAuditLog-Database" error="File">
            <Failoves>
                <AppendeRef ref="EngineAuditLog-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Engine Audit log : JDBC appende template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'EngineAuditLog-SQLServer-Database-Failover' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-SQLSever-Database" tableName="engine_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" />
            <Column name="PROXY_ROUND_TRIP_MS" patten="%X{AUDIT.proxyRoundTripMS}" />
            <Column name="USER_INFO_ROUND_TRIP_MS" patten="%X{AUDIT.userInfoRoundTripMS}" />
            <Column name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <Column name="SUBJECT" patten="%X{AUDIT.subject}" />
            <Column name="AUTH_MECH" patten="%X{AUDIT.authMech}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
            <Column name="FAILED_RULE_TYPE" patten="%X{AUDIT.failedRuleType}" />
            <Column name="FAILED_RULE_NAME" patten="%X{AUDIT.failedRuleName}" />
            <Column name="FAILED_RULE_CLASS" patten="%X{AUDIT.failedRuleClass}" />
            <Column name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-SQLSever-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_sqlsever_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_engine_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.userInfoRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="EngineAuditLog-SQLServer-Database-Failover" primary="EngineAuditLog-SQLServer-Database" error="File">
            <Failoves>
                <AppendeRef ref="EngineAuditLog-SQLServer-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Engine Audit log : JDBC appende template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'EngineAuditLog-PostgreSQL' for the 'engineaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="EngineAuditLog-PostgeSQL-Database" tableName="engine_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getEngineAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <ColumnMapping name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="PROXY_ROUND_TRIP_MS" patten="%X{AUDIT.proxyRoundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="USER_INFO_ROUND_TRIP_MS" patten="%X{AUDIT.userInfoRoundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <ColumnMapping name="SUBJECT" patten="%X{AUDIT.subject}" />
            <ColumnMapping name="AUTH_MECH" patten="%X{AUDIT.authMech}" />
            <ColumnMapping name="CLIENT" patten="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" patten="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="FAILED_RULE_TYPE" patten="%X{AUDIT.failedRuleType}" />
            <ColumnMapping name="FAILED_RULE_NAME" patten="%X{AUDIT.failedRuleName}" />
            <ColumnMapping name="FAILED_RULE_CLASS" patten="%X{AUDIT.failedRuleClass}" />
            <ColumnMapping name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <ColumnMapping name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <ColumnMapping name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="EngineAuditLog-PostgeSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_postgesql_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_engine_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.proxyRoundTripMS} ms| %X{AUDIT.userInfoRoundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.subject}| %X{AUDIT.authMech}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.failedRuleType}| %X{AUDIT.failedRuleName}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="EngineAuditLog-PostgreSQL" primary="EngineAuditLog-PostgreSQL-Database" error="File">
            <Failoves>
                <AppendeRef ref="EngineAuditLog-PostgreSQL-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Engine Audit log fo Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the eference to this appender in "engineaudit" (under "Loggers" below)
        befoe it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PattenLayout"
        <chaset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="EngineAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_engine_audit_splunk.log"
                     filePatten="${sys:pa.home}/log/pingaccess_engine_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" proxyRoundTripMS="%X{AUDIT.proxyRoundTripMS}" userInfoRoundTripMS="%X{AUDIT.userInfoRoundTripMS}" resource="%X{AUDIT.resource}" subject="%X{AUDIT.subject}" authMech="%X{AUDIT.authMech}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" failedRuleType="%X{AUDIT.failedRuleType}" failedRuleName="%X{AUDIT.failedRuleName}" failedRuleClass="%X{AUDIT.failedRuleClass}" applicationName="%X{AUDIT.applicationName}" resourceName="%X{AUDIT.resourceName}" pathPrefix="%X{AUDIT.pathPrefix}" %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- Agent auditing asynchonous file logging configuration-->
        <!-- Additional Agent Audit values available:-->
        <!-- | %X{AUDIT.failedRuleClass}-->
        <!-- | %X{AUDIT.failedRuleSetName}-->
        <!-- | %X{AUDIT.host}-->
        <!-- | %X{AUDIT.oundTripMS}-->
        <!-- | %X{AUDIT.eqReceivedMillisec}-->
        <!-- | %X{AUDIT.espSentMillisec}-->
        <!-- | %X{AUDIT.applicationId}-->
        <!-- | %X{AUDIT.esourceId}-->
        <!-- | %X{AUDIT.scopes}-->
        <!-- | %appResponseHeade{a-header-name}-->
        <!-- | %clientResponseHeade{a-header-name}-->
        <!-- | %appRequestHeade{a-header-name}-->
        <!-- | %clientRequestHeade{a-header-name}-->
        <RollingFile name="AgentAuditLog-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit.log"
                     filePatten="${sys:pa.home}/log/pingaccess_agent_audit.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead of system's default encoding. -->
                <!--
                <chaset>UTF-8</charset>
                -->
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
            <DefaultRolloveStrategy>
                <Delete basePath="${sys:pa.home}/log">
                    <IfFileName glob="pingaccess_agent_audit.*.log">
                        <IfAny>
                            <IfAccumulatedFileCount exceeds="5" />
                        </IfAny>
                    </IfFileName>
                </Delete>
            </DefaultRolloveStrategy>

        </RollingFile>

        <!-- Agent Audit log : JDBC appende template for Oracle

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'AgentAuditLog-Database-Failover' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the Oracle JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-Database" tableName="agent_audit_log" ignoeExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2OracleConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}" isClob="true"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-Database-Failove-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_oacle_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_agent_audit_oracle_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="AgentAuditLog-Database-Failover" primary="AgentAuditLog-Database" error="File">
            <Failoves>
                <AppendeRef ref="AgentAuditLog-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Agent Audit log : JDBC appende template for Microsoft SQL Server

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'AgentAuditLog-SQLServer-Database-Failover' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the SQL Server JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-SQLSever-Database" tableName="agent_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2SqlServerConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <Column name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <Column name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <Column name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" />
            <Column name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <Column name="CLIENT" patten="%X{AUDIT.client}" />
            <Column name="METHOD" patten="%X{AUDIT.method}" />
            <Column name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <Column name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" />
            <Column name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <Column name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <Column name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-SQLSever-Database-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_sqlsever_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_agent_audit_sqlserver_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="AgentAuditLog-SQLServer-Database-Failover" primary="AgentAuditLog-SQLServer-Database" error="File">
            <Failoves>
                <AppendeRef ref="AgentAuditLog-SQLServer-Database-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Agent Audit log : JDBC appende template for PostgreSQL

        To enable:
          1) Uncomment the PingAccessJDBC, RollingFile and PingAccessFailove elements below
          2) Uncomment the eference to 'AgentAuditLog-PostgreSQL' for the 'agentaudit' Logger (in the 'Loggers' section)
          3) Ensue that the 'log4j2.db.properties' file is populated with valid values
          4) Ensue that the PostgreSQL JDBC driver JAR file is in the /lib directory

        Note:
          In PingAccessFailove, the 'retryIntervalSeconds' attribute may be added to specify the number of seconds that must
          pass befoe retrying the primary JDBC appender.
        -->
        <!--
        <PingAccessJDBC name="AgentAuditLog-PostgeSQL-Database" tableName="agent_audit_log" ignoreExceptions="false" bufferSize="256">
            <ConnectionFactoy class="com.pingidentity.pa.cli.logging.database.Log4j2PostgreSQLConnectionFactory" method="getAgentAuditConnection" />
            <Column name="D_TIME" isEventTimestamp="tue"/>
            <ColumnMapping name="EXCHANGE_ID" patten="%X{exchangeId}" />
            <ColumnMapping name="TRACKING_ID" patten="%X{AUDIT.trackingId}" />
            <ColumnMapping name="ROUND_TRIP_MS" patten="%X{AUDIT.roundTripMS}" type="java.lang.Integer"/>
            <ColumnMapping name="REQUESTED_RESOURCE" patten="%X{AUDIT.resource}" />
            <ColumnMapping name="CLIENT" patten="%X{AUDIT.client}" />
            <ColumnMapping name="METHOD" patten="%X{AUDIT.method}" />
            <ColumnMapping name="REQUEST_URI" patten="%X{AUDIT.requestUri}"/>
            <ColumnMapping name="RESPONSE_CODE" patten="%X{AUDIT.responseCode}" type="java.lang.Integer"/>
            <ColumnMapping name="APPLICATION_NAME" patten="%X{AUDIT.applicationName}" />
            <ColumnMapping name="RESOURCE_NAME" patten="%X{AUDIT.resourceName}" />
            <ColumnMapping name="PATH_PREFIX" patten="%X{AUDIT.pathPrefix}" />
        </PingAccessJDBC>
        <RollingFile name="AgentAuditLog-PostgeSQL-Failover-File"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_postgesql_failover.log"
                     filePatten="${sys:pa.home}/log/pingaccess_agent_audit_postgresql_failover.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d{ISO8601}| %X{exchangeId}| %X{AUDIT.trackingId}| %X{AUDIT.roundTripMS} ms| %X{AUDIT.resource}| %X{AUDIT.client}| %X{AUDIT.method}| %X{AUDIT.requestUri}| %X{AUDIT.responseCode}| %X{AUDIT.applicationName}| %X{AUDIT.resourceName}| %X{AUDIT.pathPrefix} %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        <PingAccessFailove name="AgentAuditLog-PostgreSQL" primary="AgentAuditLog-PostgreSQL-Database" error="File">
            <Failoves>
                <AppendeRef ref="AgentAuditLog-PostgreSQL-Failover-File"/>
            </Failoves>
        </PingAccessFailove>
        -->

        <!-- Agent Audit log fo Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the eference to this appender in "agentaudit" (under "Loggers" below)
        befoe it can be used.

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PattenLayout"
        <chaset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="AgentAudit2Splunk"
                     fileName="${sys:pa.home}/log/pingaccess_agent_audit_splunk.log"
                     filePatten="${sys:pa.home}/log/pingaccess_agent_audit_splunk.%d{yyyy-MM-dd}.log"
                     ignoeExceptions="false">
            <PattenLayout>
                <patten>%d exchangeId="%X{exchangeId}" trackingId="%X{AUDIT.trackingId}" roundTripMS="%X{AUDIT.roundTripMS}" resource="%X{AUDIT.resource}" client="%X{AUDIT.client}" method="%X{AUDIT.method}" requestUri="%X{AUDIT.requestUri}" responseCode="%X{AUDIT.responseCode}" applicationName="%X{AUDIT.applicationName}" resourceName="%X{AUDIT.resourceName}" pathPrefix="%X{AUDIT.pathPrefix}" %n</pattern>
            </PattenLayout>
            <Policies>
                <TimeBasedTiggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <!-- ================================================= -->
        <!--                   Syslog Appende                 -->
        <!-- ================================================= -->
        <!-- To use, uncomment the appendeRef under "com.pingidentity" Logger -->

        <!-- Syslog events - Custom patten
        <Socket name="SYSLOG" host="localhost" pot="514" protocol="UDP">
            <PingSyslogLayout facility="LOCAL0">
                <PattenLayout>
                    <patten>%d{ABSOLUTE} %5p %c:%L - %m%n</pattern>
                </PattenLayout>
            </PingSyslogLayout>
        </Socket>
        -->
    </Appendes>

    <Logges>
        <!-- PingAccess Logges-->
        <AsyncLogge name="com.pingidentity" level="${PA_LOG_LEVEL}" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
            <!--<AppendeRef ref="CONSOLE" />-->
            <!--<AppendeRef ref="SYSLOG" />-->
        </AsyncLogge>

        <!-- Logs details/odering of service proxies -->
        <AsyncLogge name="com.pingidentity.pa.core.proxies.ProxyInfoLogger" level="INFO"/>

        <!-- Logs configuation replication details -->
        <AsyncLogge name="com.pingidentity.pa.polling.replication" level="INFO"/>

        <!-- Log incoming and outgoing cookies-->
        <!--
        <AsyncLogge name="com.pingidentity.pa.core.interceptor.CookieLoggingInterceptor" level="TRACE" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        -->

        <!-- Audit Log Configuation-->
        <Logge name="apiaudit" level="INFO" additivity="false">
            <AppendeRef ref="APIAuditLog-File"/>
            <!--<AppendeRef ref="ApiAuditLog-Database-Failover"/>-->
            <!--<AppendeRef ref="ApiAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppendeRef ref="ApiAuditLog-PostgreSQL"/>-->
            <!--<AppendeRef ref="ApiAudit2Splunk"/>-->
        </Logge>
        <Logge name="engineaudit" level="INFO" additivity="false">
            <AppendeRef ref="EngineAuditLog-File"/>
            <!--<AppendeRef ref="EngineAuditLog-Database-Failover"/>-->
            <!--<AppendeRef ref="EngineAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppendeRef ref="EngineAuditLog-PostgreSQL"/>-->
            <!--<AppendeRef ref="EngineAudit2Splunk"/>-->
        </Logge>
        <Logge name="agentaudit" level="INFO" additivity="false">
            <AppendeRef ref="AgentAuditLog-File"/>
            <!--<AppendeRef ref="AgentAuditLog-Database-Failover"/>-->
            <!--<AppendeRef ref="AgentAuditLog-SQLServer-Database-Failover"/>-->
            <!--<AppendeRef ref="AgentAuditLog-PostgreSQL"/>-->
            <!--<AppendeRef ref="AgentAudit2Splunk"/>-->
        </Logge>

        <!--Thid-party dependencies-->
        <AsyncLogge name="com.netflix" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="com.netflix.config.sources.URLConfigurationSource" level="FATAL" additivity="false"
                     includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="net.sf.ehcache" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="net.sf.ehcache.config.CacheConfiguration" level="ERROR" additivity="false"
                     includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.springframework" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.springframework.orm.jpa" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.hibernate" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.hibernate.orm.deprecation" level="FATAL" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory" level="ERROR" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.hibernate.jpa.internal.util.LogHelper" level="FATAL" additivity="false"
                     includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.apache.http" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="java.sql.DatabaseMetaData" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="com.wordnik.swagger" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="io.netty" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.jose4j.jwe.kdf" level="WARN" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>
        <AsyncLogge name="org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator" level="ERROR" additivity="false" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncLogge>

        <!-- Root Logge-->
        <AsyncRoot level="INFO" includeLocation="false">
            <AppendeRef ref="File"/>
        </AsyncRoot>
    </Logges>
</Configuation>
