#!/bin/bash

function create_shared_secret() {

  set +x

  password="${1}"
  endpoint="${2}"

  # export for envsubst
  export AGENT_SHARED_SECRET="${3}" # shared secrets must be 22 chars

  create_shared_secret_payload=$(envsubst < ${templates_dir_path}/create-shared-secret-payload.json)
  create_shared_secret_response=$(curl -k \
    -i \
    -s \
    -u "Administrator:${password}" \
    -H 'X-Xsrf-Header: PingAccess' \
    -d "${create_shared_secret_payload}" \
    "${endpoint}/sharedSecrets")

  create_shared_secret_response_code=$(parse_http_response_code "${create_shared_secret_response}")

  if [[ 200 -ne ${create_shared_secret_response_code} ]]; then
    echo "There was a problem creating the shared secret: " ${create_shared_secret_response_code}
    return 1
  else
    echo "${create_shared_secret_response}"
    return 0
  fi
}


function create_agent() {

  set +x

  password="${1}"
  endpoint="${2}"

  # export for envsubst
  export SHARED_SECRET_ID=${3}
  export PA_ENGINE_HOST=${4}

  create_agent_payload=$(envsubst < ${templates_dir_path}/create-agent-payload.json)
  create_agent_response=$(curl -k \
    -i \
    -s \
    -u "Administrator:${password}" \
    -H 'X-Xsrf-Header: PingAccess' \
    -d "${create_agent_payload}" \
    "${endpoint}/agents")

  create_agent_response_code=$(parse_http_response_code "${create_agent_response}")

  if [[ 200 -ne ${create_agent_response_code} ]]; then
    echo "There was a problem creating the agent: " ${create_agent_response_code}
    return 1
  else
    echo "${create_agent_response}"
    return 0
  fi
}


function create_application() {

  set +x

  password="${1}"
  endpoint="${2}"

  # export for envsubst
  export AGENT_ID=${3}
  export VIRTUAL_HOST_ID=${4}

  create_application_payload=$(envsubst < ${templates_dir_path}/create-application-payload.json)
  create_application_response=$(curl -k \
    -i \
    -s \
    -u "Administrator:${password}" \
    -H 'X-Xsrf-Header: PingAccess' \
    -d "${create_application_payload}" \
    "${endpoint}/applications")

  create_application_response_code=$(parse_http_response_code "${create_application_response}")

  if [[ 200 -ne ${create_application_response_code} ]]; then
    echo "There was a problem creating the application: " ${create_application_response_code}
    return 1
  else
    echo "${create_application_response}"
    return 0
  fi
}


function create_virtual_host() {

  set +x

  password="${1}"
  endpoint="${2}"

  create_vhost_payload=$(envsubst < ${templates_dir_path}/create-vhost-payload.json)
  create_vhost_response=$(curl -k \
  -i \
  -s \
  -u "Administrator:${password}" \
  -H 'X-Xsrf-Header: PingAccess' \
  -d "${create_vhost_payload}" \
  "${endpoint}/virtualhosts")

  create_vhost_response_code=$(parse_http_response_code "${create_vhost_response}")

  if [[ 200 -ne ${create_vhost_response_code} ]]; then
    echo "There was a problem creating the virtual host: " ${create_vhost_response_code}
    return 1
  else
    echo "${create_vhost_response}"
    return 0
  fi
}
